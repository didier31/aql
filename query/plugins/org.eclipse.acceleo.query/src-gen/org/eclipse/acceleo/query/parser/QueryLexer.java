// Generated from Query.g4 by ANTLR 4.2.2

/*******************************************************************************
 * Copyright (c) 2015 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************/
package org.eclipse.acceleo.query.parser;

import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast" })
public class QueryLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;

	protected static final PredictionContextCache _sharedContextCache = new PredictionContextCache();

	public static final int T__48 = 1, T__47 = 2, T__46 = 3, T__45 = 4, T__44 = 5, T__43 = 6, T__42 = 7,
			T__41 = 8, T__40 = 9, T__39 = 10, T__38 = 11, T__37 = 12, T__36 = 13, T__35 = 14, T__34 = 15,
			T__33 = 16, T__32 = 17, T__31 = 18, T__30 = 19, T__29 = 20, T__28 = 21, T__27 = 22, T__26 = 23,
			T__25 = 24, T__24 = 25, T__23 = 26, T__22 = 27, T__21 = 28, T__20 = 29, T__19 = 30, T__18 = 31,
			T__17 = 32, T__16 = 33, T__15 = 34, T__14 = 35, T__13 = 36, T__12 = 37, T__11 = 38, T__10 = 39,
			T__9 = 40, T__8 = 41, T__7 = 42, T__6 = 43, T__5 = 44, T__4 = 45, T__3 = 46, T__2 = 47,
			T__1 = 48, T__0 = 49, WS = 50, MultOp = 51, Integer = 52, Real = 53, String = 54, Ident = 55;

	public static String[] modeNames = {"DEFAULT_MODE" };

	public static final String[] tokenNames = {"<INVALID>", "']'", "'Sequence{'", "'OrderedSet{'",
			"'eContents('", "'oclIsTypeOf('", "'select'", "','", "'Sequence('", "'-'", "'or'", "'['",
			"'not'", "'('", "':'", "'<'", "'false'", "'eContainer('", "'siblings('", "'<='",
			"'oclIsKindOf('", "'{'", "'and'", "'reject'", "'eInverse('", "'}'", "'true'",
			"'precedingSiblings('", "'->'", "'.'", "')'", "'+'", "'collect'", "'::'", "'is('", "'<>'",
			"'filter('", "'='", "'Boolean'", "'oclAsType('", "'String'", "'Integer'", "'>'", "'null'",
			"'Real'", "'as('", "'eAllContents('", "'OrderedSet('", "'>='", "'|'", "WS", "MultOp", "Integer",
			"Real", "String", "Ident" };

	public static final String[] ruleNames = {"T__48", "T__47", "T__46", "T__45", "T__44", "T__43", "T__42",
			"T__41", "T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", "T__33", "T__32",
			"T__31", "T__30", "T__29", "T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22",
			"T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12",
			"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0",
			"WS", "MultOp", "Integer", "Real", "String", "Ident", "Letter" };

	public QueryLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this, _ATN, _decisionToDFA, _sharedContextCache);
	}

	@Override
	public String getGrammarFileName() {
		return "Query.g4";
	}

	@Override
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override
	public String[] getRuleNames() {
		return ruleNames;
	}

	@Override
	public String getSerializedATN() {
		return _serializedATN;
	}

	@Override
	public String[] getModeNames() {
		return modeNames;
	}

	@Override
	public ATN getATN() {
		return _ATN;
	}

	public static final String _serializedATN = "\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\29\u01c9\b\1\4\2\t"
			+ "\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"
			+ "\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"
			+ "\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"
			+ "\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"
			+ "\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"
			+ ",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"
			+ "\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3\2\3\3\3\3\3\3\3\3"
			+ "\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3"
			+ "\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6"
			+ "\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3"
			+ "\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\r"
			+ "\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3"
			+ "\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3"
			+ "\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3"
			+ "\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3"
			+ "\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3"
			+ "\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3"
			+ "\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3"
			+ "\34\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3"
			+ "!\3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3"
			+ "%\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3("
			+ "\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3,\3,\3,\3,\3,"
			+ "\3-\3-\3-\3-\3-\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/"
			+ "\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61"
			+ "\3\61\3\62\3\62\3\63\6\63\u019c\n\63\r\63\16\63\u019d\3\63\3\63\3\64\3"
			+ "\64\3\65\6\65\u01a5\n\65\r\65\16\65\u01a6\3\66\6\66\u01aa\n\66\r\66\16"
			+ "\66\u01ab\3\66\3\66\6\66\u01b0\n\66\r\66\16\66\u01b1\3\67\3\67\7\67\u01b6"
			+ "\n\67\f\67\16\67\u01b9\13\67\3\67\3\67\38\38\58\u01bf\n8\38\38\78\u01c3"
			+ "\n8\f8\168\u01c6\138\39\39\3\u01b7\2:\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21"
			+ "\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"
			+ "/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.["
			+ "/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q\2\3\2\7\5\2\13\f\17\17\"\"\5\2"
			+ ")),,\61\61\3\2\62;\4\2\62;aa\4\2C\\c|\u01cf\2\3\3\2\2\2\2\5\3\2\2\2\2"
			+ "\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2"
			+ "\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2"
			+ "\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2"
			+ "\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2"
			+ "\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2"
			+ "\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2"
			+ "M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3"
			+ "\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2"
			+ "\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\3s\3\2\2\2\5"
			+ "u\3\2\2\2\7\177\3\2\2\2\t\u008b\3\2\2\2\13\u0096\3\2\2\2\r\u00a3\3\2\2"
			+ "\2\17\u00aa\3\2\2\2\21\u00ac\3\2\2\2\23\u00b6\3\2\2\2\25\u00b8\3\2\2\2"
			+ "\27\u00bb\3\2\2\2\31\u00bd\3\2\2\2\33\u00c1\3\2\2\2\35\u00c3\3\2\2\2\37"
			+ "\u00c5\3\2\2\2!\u00c7\3\2\2\2#\u00cd\3\2\2\2%\u00d9\3\2\2\2\'\u00e3\3"
			+ "\2\2\2)\u00e6\3\2\2\2+\u00f3\3\2\2\2-\u00f5\3\2\2\2/\u00f9\3\2\2\2\61"
			+ "\u0100\3\2\2\2\63\u010a\3\2\2\2\65\u010c\3\2\2\2\67\u0111\3\2\2\29\u0124"
			+ "\3\2\2\2;\u0127\3\2\2\2=\u0129\3\2\2\2?\u012b\3\2\2\2A\u012d\3\2\2\2C"
			+ "\u0135\3\2\2\2E\u0138\3\2\2\2G\u013c\3\2\2\2I\u013f\3\2\2\2K\u0147\3\2"
			+ "\2\2M\u0149\3\2\2\2O\u0151\3\2\2\2Q\u015c\3\2\2\2S\u0163\3\2\2\2U\u016b"
			+ "\3\2\2\2W\u016d\3\2\2\2Y\u0172\3\2\2\2[\u0177\3\2\2\2]\u017b\3\2\2\2_"
			+ "\u0189\3\2\2\2a\u0195\3\2\2\2c\u0198\3\2\2\2e\u019b\3\2\2\2g\u01a1\3\2"
			+ "\2\2i\u01a4\3\2\2\2k\u01a9\3\2\2\2m\u01b3\3\2\2\2o\u01be\3\2\2\2q\u01c7"
			+ "\3\2\2\2st\7_\2\2t\4\3\2\2\2uv\7U\2\2vw\7g\2\2wx\7s\2\2xy\7w\2\2yz\7g"
			+ "\2\2z{\7p\2\2{|\7e\2\2|}\7g\2\2}~\7}\2\2~\6\3\2\2\2\177\u0080\7Q\2\2\u0080"
			+ "\u0081\7t\2\2\u0081\u0082\7f\2\2\u0082\u0083\7g\2\2\u0083\u0084\7t\2\2"
			+ "\u0084\u0085\7g\2\2\u0085\u0086\7f\2\2\u0086\u0087\7U\2\2\u0087\u0088"
			+ "\7g\2\2\u0088\u0089\7v\2\2\u0089\u008a\7}\2\2\u008a\b\3\2\2\2\u008b\u008c"
			+ "\7g\2\2\u008c\u008d\7E\2\2\u008d\u008e\7q\2\2\u008e\u008f\7p\2\2\u008f"
			+ "\u0090\7v\2\2\u0090\u0091\7g\2\2\u0091\u0092\7p\2\2\u0092\u0093\7v\2\2"
			+ "\u0093\u0094\7u\2\2\u0094\u0095\7*\2\2\u0095\n\3\2\2\2\u0096\u0097\7q"
			+ "\2\2\u0097\u0098\7e\2\2\u0098\u0099\7n\2\2\u0099\u009a\7K\2\2\u009a\u009b"
			+ "\7u\2\2\u009b\u009c\7V\2\2\u009c\u009d\7{\2\2\u009d\u009e\7r\2\2\u009e"
			+ "\u009f\7g\2\2\u009f\u00a0\7Q\2\2\u00a0\u00a1\7h\2\2\u00a1\u00a2\7*\2\2"
			+ "\u00a2\f\3\2\2\2\u00a3\u00a4\7u\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7n"
			+ "\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7e\2\2\u00a8\u00a9\7v\2\2\u00a9\16"
			+ "\3\2\2\2\u00aa\u00ab\7.\2\2\u00ab\20\3\2\2\2\u00ac\u00ad\7U\2\2\u00ad"
			+ "\u00ae\7g\2\2\u00ae\u00af\7s\2\2\u00af\u00b0\7w\2\2\u00b0\u00b1\7g\2\2"
			+ "\u00b1\u00b2\7p\2\2\u00b2\u00b3\7e\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5"
			+ "\7*\2\2\u00b5\22\3\2\2\2\u00b6\u00b7\7/\2\2\u00b7\24\3\2\2\2\u00b8\u00b9"
			+ "\7q\2\2\u00b9\u00ba\7t\2\2\u00ba\26\3\2\2\2\u00bb\u00bc\7]\2\2\u00bc\30"
			+ "\3\2\2\2\u00bd\u00be\7p\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0\7v\2\2\u00c0"
			+ "\32\3\2\2\2\u00c1\u00c2\7*\2\2\u00c2\34\3\2\2\2\u00c3\u00c4\7<\2\2\u00c4"
			+ "\36\3\2\2\2\u00c5\u00c6\7>\2\2\u00c6 \3\2\2\2\u00c7\u00c8\7h\2\2\u00c8"
			+ "\u00c9\7c\2\2\u00c9\u00ca\7n\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc\7g\2\2"
			+ "\u00cc\"\3\2\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf\7E\2\2\u00cf\u00d0\7q"
			+ "\2\2\u00d0\u00d1\7p\2\2\u00d1\u00d2\7v\2\2\u00d2\u00d3\7c\2\2\u00d3\u00d4"
			+ "\7k\2\2\u00d4\u00d5\7p\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7\7t\2\2\u00d7"
			+ "\u00d8\7*\2\2\u00d8$\3\2\2\2\u00d9\u00da\7u\2\2\u00da\u00db\7k\2\2\u00db"
			+ "\u00dc\7d\2\2\u00dc\u00dd\7n\2\2\u00dd\u00de\7k\2\2\u00de\u00df\7p\2\2"
			+ "\u00df\u00e0\7i\2\2\u00e0\u00e1\7u\2\2\u00e1\u00e2\7*\2\2\u00e2&\3\2\2"
			+ "\2\u00e3\u00e4\7>\2\2\u00e4\u00e5\7?\2\2\u00e5(\3\2\2\2\u00e6\u00e7\7"
			+ "q\2\2\u00e7\u00e8\7e\2\2\u00e8\u00e9\7n\2\2\u00e9\u00ea\7K\2\2\u00ea\u00eb"
			+ "\7u\2\2\u00eb\u00ec\7M\2\2\u00ec\u00ed\7k\2\2\u00ed\u00ee\7p\2\2\u00ee"
			+ "\u00ef\7f\2\2\u00ef\u00f0\7Q\2\2\u00f0\u00f1\7h\2\2\u00f1\u00f2\7*\2\2"
			+ "\u00f2*\3\2\2\2\u00f3\u00f4\7}\2\2\u00f4,\3\2\2\2\u00f5\u00f6\7c\2\2\u00f6"
			+ "\u00f7\7p\2\2\u00f7\u00f8\7f\2\2\u00f8.\3\2\2\2\u00f9\u00fa\7t\2\2\u00fa"
			+ "\u00fb\7g\2\2\u00fb\u00fc\7l\2\2\u00fc\u00fd\7g\2\2\u00fd\u00fe\7e\2\2"
			+ "\u00fe\u00ff\7v\2\2\u00ff\60\3\2\2\2\u0100\u0101\7g\2\2\u0101\u0102\7"
			+ "K\2\2\u0102\u0103\7p\2\2\u0103\u0104\7x\2\2\u0104\u0105\7g\2\2\u0105\u0106"
			+ "\7t\2\2\u0106\u0107\7u\2\2\u0107\u0108\7g\2\2\u0108\u0109\7*\2\2\u0109"
			+ "\62\3\2\2\2\u010a\u010b\7\177\2\2\u010b\64\3\2\2\2\u010c\u010d\7v\2\2"
			+ "\u010d\u010e\7t\2\2\u010e\u010f\7w\2\2\u010f\u0110\7g\2\2\u0110\66\3\2"
			+ "\2\2\u0111\u0112\7r\2\2\u0112\u0113\7t\2\2\u0113\u0114\7g\2\2\u0114\u0115"
			+ "\7e\2\2\u0115\u0116\7g\2\2\u0116\u0117\7f\2\2\u0117\u0118\7k\2\2\u0118"
			+ "\u0119\7p\2\2\u0119\u011a\7i\2\2\u011a\u011b\7U\2\2\u011b\u011c\7k\2\2"
			+ "\u011c\u011d\7d\2\2\u011d\u011e\7n\2\2\u011e\u011f\7k\2\2\u011f\u0120"
			+ "\7p\2\2\u0120\u0121\7i\2\2\u0121\u0122\7u\2\2\u0122\u0123\7*\2\2\u0123"
			+ "8\3\2\2\2\u0124\u0125\7/\2\2\u0125\u0126\7@\2\2\u0126:\3\2\2\2\u0127\u0128"
			+ "\7\60\2\2\u0128<\3\2\2\2\u0129\u012a\7+\2\2\u012a>\3\2\2\2\u012b\u012c"
			+ "\7-\2\2\u012c@\3\2\2\2\u012d\u012e\7e\2\2\u012e\u012f\7q\2\2\u012f\u0130"
			+ "\7n\2\2\u0130\u0131\7n\2\2\u0131\u0132\7g\2\2\u0132\u0133\7e\2\2\u0133"
			+ "\u0134\7v\2\2\u0134B\3\2\2\2\u0135\u0136\7<\2\2\u0136\u0137\7<\2\2\u0137"
			+ "D\3\2\2\2\u0138\u0139\7k\2\2\u0139\u013a\7u\2\2\u013a\u013b\7*\2\2\u013b"
			+ "F\3\2\2\2\u013c\u013d\7>\2\2\u013d\u013e\7@\2\2\u013eH\3\2\2\2\u013f\u0140"
			+ "\7h\2\2\u0140\u0141\7k\2\2\u0141\u0142\7n\2\2\u0142\u0143\7v\2\2\u0143"
			+ "\u0144\7g\2\2\u0144\u0145\7t\2\2\u0145\u0146\7*\2\2\u0146J\3\2\2\2\u0147"
			+ "\u0148\7?\2\2\u0148L\3\2\2\2\u0149\u014a\7D\2\2\u014a\u014b\7q\2\2\u014b"
			+ "\u014c\7q\2\2\u014c\u014d\7n\2\2\u014d\u014e\7g\2\2\u014e\u014f\7c\2\2"
			+ "\u014f\u0150\7p\2\2\u0150N\3\2\2\2\u0151\u0152\7q\2\2\u0152\u0153\7e\2"
			+ "\2\u0153\u0154\7n\2\2\u0154\u0155\7C\2\2\u0155\u0156\7u\2\2\u0156\u0157"
			+ "\7V\2\2\u0157\u0158\7{\2\2\u0158\u0159\7r\2\2\u0159\u015a\7g\2\2\u015a"
			+ "\u015b\7*\2\2\u015bP\3\2\2\2\u015c\u015d\7U\2\2\u015d\u015e\7v\2\2\u015e"
			+ "\u015f\7t\2\2\u015f\u0160\7k\2\2\u0160\u0161\7p\2\2\u0161\u0162\7i\2\2"
			+ "\u0162R\3\2\2\2\u0163\u0164\7K\2\2\u0164\u0165\7p\2\2\u0165\u0166\7v\2"
			+ "\2\u0166\u0167\7g\2\2\u0167\u0168\7i\2\2\u0168\u0169\7g\2\2\u0169\u016a"
			+ "\7t\2\2\u016aT\3\2\2\2\u016b\u016c\7@\2\2\u016cV\3\2\2\2\u016d\u016e\7"
			+ "p\2\2\u016e\u016f\7w\2\2\u016f\u0170\7n\2\2\u0170\u0171\7n\2\2\u0171X"
			+ "\3\2\2\2\u0172\u0173\7T\2\2\u0173\u0174\7g\2\2\u0174\u0175\7c\2\2\u0175"
			+ "\u0176\7n\2\2\u0176Z\3\2\2\2\u0177\u0178\7c\2\2\u0178\u0179\7u\2\2\u0179"
			+ "\u017a\7*\2\2\u017a\\\3\2\2\2\u017b\u017c\7g\2\2\u017c\u017d\7C\2\2\u017d"
			+ "\u017e\7n\2\2\u017e\u017f\7n\2\2\u017f\u0180\7E\2\2\u0180\u0181\7q\2\2"
			+ "\u0181\u0182\7p\2\2\u0182\u0183\7v\2\2\u0183\u0184\7g\2\2\u0184\u0185"
			+ "\7p\2\2\u0185\u0186\7v\2\2\u0186\u0187\7u\2\2\u0187\u0188\7*\2\2\u0188"
			+ "^\3\2\2\2\u0189\u018a\7Q\2\2\u018a\u018b\7t\2\2\u018b\u018c\7f\2\2\u018c"
			+ "\u018d\7g\2\2\u018d\u018e\7t\2\2\u018e\u018f\7g\2\2\u018f\u0190\7f\2\2"
			+ "\u0190\u0191\7U\2\2\u0191\u0192\7g\2\2\u0192\u0193\7v\2\2\u0193\u0194"
			+ "\7*\2\2\u0194`\3\2\2\2\u0195\u0196\7@\2\2\u0196\u0197\7?\2\2\u0197b\3"
			+ "\2\2\2\u0198\u0199\7~\2\2\u0199d\3\2\2\2\u019a\u019c\t\2\2\2\u019b\u019a"
			+ "\3\2\2\2\u019c\u019d\3\2\2\2\u019d\u019b\3\2\2\2\u019d\u019e\3\2\2\2\u019e"
			+ "\u019f\3\2\2\2\u019f\u01a0\b\63\2\2\u01a0f\3\2\2\2\u01a1\u01a2\t\3\2\2"
			+ "\u01a2h\3\2\2\2\u01a3\u01a5\t\4\2\2\u01a4\u01a3\3\2\2\2\u01a5\u01a6\3"
			+ "\2\2\2\u01a6\u01a4\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7j\3\2\2\2\u01a8\u01aa"
			+ "\t\4\2\2\u01a9\u01a8\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01a9\3\2\2\2\u01ab"
			+ "\u01ac\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01af\7\60\2\2\u01ae\u01b0\t"
			+ "\4\2\2\u01af\u01ae\3\2\2\2\u01b0\u01b1\3\2\2\2\u01b1\u01af\3\2\2\2\u01b1"
			+ "\u01b2\3\2\2\2\u01b2l\3\2\2\2\u01b3\u01b7\7)\2\2\u01b4\u01b6\13\2\2\2"
			+ "\u01b5\u01b4\3\2\2\2\u01b6\u01b9\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b7\u01b5"
			+ "\3\2\2\2\u01b8\u01ba\3\2\2\2\u01b9\u01b7\3\2\2\2\u01ba\u01bb\7)\2\2\u01bb"
			+ "n\3\2\2\2\u01bc\u01bf\5q9\2\u01bd\u01bf\7a\2\2\u01be\u01bc\3\2\2\2\u01be"
			+ "\u01bd\3\2\2\2\u01bf\u01c4\3\2\2\2\u01c0\u01c3\5q9\2\u01c1\u01c3\t\5\2"
			+ "\2\u01c2\u01c0\3\2\2\2\u01c2\u01c1\3\2\2\2\u01c3\u01c6\3\2\2\2\u01c4\u01c2"
			+ "\3\2\2\2\u01c4\u01c5\3\2\2\2\u01c5p\3\2\2\2\u01c6\u01c4\3\2\2\2\u01c7"
			+ "\u01c8\t\6\2\2\u01c8r\3\2\2\2\13\2\u019d\u01a6\u01ab\u01b1\u01b7\u01be"
			+ "\u01c2\u01c4\3\b\2\2";

	public static final ATN _ATN = new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}
