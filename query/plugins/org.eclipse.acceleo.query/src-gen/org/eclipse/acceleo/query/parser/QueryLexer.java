// Generated from Query.g4 by ANTLR 4.2.2

/*******************************************************************************
 * Copyright (c) 2015 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************/
package org.eclipse.acceleo.query.parser;

import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast" })
public class QueryLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;

	protected static final PredictionContextCache _sharedContextCache = new PredictionContextCache();

	public static final int T__52 = 1, T__51 = 2, T__50 = 3, T__49 = 4, T__48 = 5, T__47 = 6, T__46 = 7,
			T__45 = 8, T__44 = 9, T__43 = 10, T__42 = 11, T__41 = 12, T__40 = 13, T__39 = 14, T__38 = 15,
			T__37 = 16, T__36 = 17, T__35 = 18, T__34 = 19, T__33 = 20, T__32 = 21, T__31 = 22, T__30 = 23,
			T__29 = 24, T__28 = 25, T__27 = 26, T__26 = 27, T__25 = 28, T__24 = 29, T__23 = 30, T__22 = 31,
			T__21 = 32, T__20 = 33, T__19 = 34, T__18 = 35, T__17 = 36, T__16 = 37, T__15 = 38, T__14 = 39,
			T__13 = 40, T__12 = 41, T__11 = 42, T__10 = 43, T__9 = 44, T__8 = 45, T__7 = 46, T__6 = 47,
			T__5 = 48, T__4 = 49, T__3 = 50, T__2 = 51, T__1 = 52, T__0 = 53, WS = 54, MultOp = 55,
			Integer = 56, Real = 57, String = 58, Ident = 59;

	public static String[] modeNames = {"DEFAULT_MODE" };

	public static final String[] tokenNames = {"<INVALID>", "'Sequence{'", "'OrderedSet{'", "'Sequence('",
			"'['", "'or'", "'<'", "'false'", "'siblings('", "'<='", "'oclIsKindOf('", "'reject'", "'}'",
			"'precedingSiblings('", "'any'", "'->'", "'isUnique'", "')'", "'collect'", "'::'", "'is('",
			"'='", "'String'", "'oclAsType('", "'forAll'", "'null'", "'eAllContents('", "'|'", "']'",
			"'oclIsTypeOf('", "'eContents('", "'select'", "','", "'-'", "':'", "'('", "'not'",
			"'eContainer('", "'{'", "'and'", "'eInverse('", "'true'", "'.'", "'+'", "'<>'", "'filter('",
			"'Boolean'", "'Integer'", "'exists'", "'>'", "'Real'", "'as('", "'OrderedSet('", "'>='", "WS",
			"MultOp", "Integer", "Real", "String", "Ident" };

	public static final String[] ruleNames = {"T__52", "T__51", "T__50", "T__49", "T__48", "T__47", "T__46",
			"T__45", "T__44", "T__43", "T__42", "T__41", "T__40", "T__39", "T__38", "T__37", "T__36",
			"T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26",
			"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16",
			"T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5",
			"T__4", "T__3", "T__2", "T__1", "T__0", "WS", "MultOp", "Integer", "Real", "String", "Ident",
			"Letter" };

	public QueryLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this, _ATN, _decisionToDFA, _sharedContextCache);
	}

	@Override
	public String getGrammarFileName() {
		return "Query.g4";
	}

	@Override
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override
	public String[] getRuleNames() {
		return ruleNames;
	}

	@Override
	public String getSerializedATN() {
		return _serializedATN;
	}

	@Override
	public String[] getModeNames() {
		return modeNames;
	}

	@Override
	public ATN getATN() {
		return _ATN;
	}

	public static final String _serializedATN = "\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2=\u01ec\b\1\4\2\t"
			+ "\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"
			+ "\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"
			+ "\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"
			+ "\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"
			+ "\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"
			+ ",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"
			+ "\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="
			+ "\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"
			+ "\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6"
			+ "\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3"
			+ "\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3"
			+ "\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16"
			+ "\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16"
			+ "\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21"
			+ "\3\21\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23"
			+ "\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\27\3\27"
			+ "\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31"
			+ "\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33"
			+ "\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35"
			+ "\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"
			+ "\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3"
			+ " \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&"
			+ "\3&\3&\3&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3*\3*\3"
			+ "*\3*\3*\3+\3+\3,\3,\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3"
			+ "/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3"
			+ "\61\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3"
			+ "\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3"
			+ "\66\3\67\6\67\u01bf\n\67\r\67\16\67\u01c0\3\67\3\67\38\38\39\69\u01c8"
			+ "\n9\r9\169\u01c9\3:\6:\u01cd\n:\r:\16:\u01ce\3:\3:\6:\u01d3\n:\r:\16:"
			+ "\u01d4\3;\3;\7;\u01d9\n;\f;\16;\u01dc\13;\3;\3;\3<\3<\5<\u01e2\n<\3<\3"
			+ "<\7<\u01e6\n<\f<\16<\u01e9\13<\3=\3=\3\u01da\2>\3\3\5\4\7\5\t\6\13\7\r"
			+ "\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"
			+ ")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"
			+ ")Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y\2\3\2\7\5\2"
			+ "\13\f\17\17\"\"\5\2)),,\61\61\3\2\62;\4\2\62;aa\4\2C\\c|\u01f2\2\3\3\2"
			+ "\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"
			+ "\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"
			+ "\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"
			+ "\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"
			+ "\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2"
			+ "=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3"
			+ "\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2"
			+ "\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2"
			+ "c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3"
			+ "\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\3{\3\2\2\2\5\u0085"
			+ "\3\2\2\2\7\u0091\3\2\2\2\t\u009b\3\2\2\2\13\u009d\3\2\2\2\r\u00a0\3\2"
			+ "\2\2\17\u00a2\3\2\2\2\21\u00a8\3\2\2\2\23\u00b2\3\2\2\2\25\u00b5\3\2\2"
			+ "\2\27\u00c2\3\2\2\2\31\u00c9\3\2\2\2\33\u00cb\3\2\2\2\35\u00de\3\2\2\2"
			+ "\37\u00e2\3\2\2\2!\u00e5\3\2\2\2#\u00ee\3\2\2\2%\u00f0\3\2\2\2\'\u00f8"
			+ "\3\2\2\2)\u00fb\3\2\2\2+\u00ff\3\2\2\2-\u0101\3\2\2\2/\u0108\3\2\2\2\61"
			+ "\u0113\3\2\2\2\63\u011a\3\2\2\2\65\u011f\3\2\2\2\67\u012d\3\2\2\29\u012f"
			+ "\3\2\2\2;\u0131\3\2\2\2=\u013e\3\2\2\2?\u0149\3\2\2\2A\u0150\3\2\2\2C"
			+ "\u0152\3\2\2\2E\u0154\3\2\2\2G\u0156\3\2\2\2I\u0158\3\2\2\2K\u015c\3\2"
			+ "\2\2M\u0168\3\2\2\2O\u016a\3\2\2\2Q\u016e\3\2\2\2S\u0178\3\2\2\2U\u017d"
			+ "\3\2\2\2W\u017f\3\2\2\2Y\u0181\3\2\2\2[\u0184\3\2\2\2]\u018c\3\2\2\2_"
			+ "\u0194\3\2\2\2a\u019c\3\2\2\2c\u01a3\3\2\2\2e\u01a5\3\2\2\2g\u01aa\3\2"
			+ "\2\2i\u01ae\3\2\2\2k\u01ba\3\2\2\2m\u01be\3\2\2\2o\u01c4\3\2\2\2q\u01c7"
			+ "\3\2\2\2s\u01cc\3\2\2\2u\u01d6\3\2\2\2w\u01e1\3\2\2\2y\u01ea\3\2\2\2{"
			+ "|\7U\2\2|}\7g\2\2}~\7s\2\2~\177\7w\2\2\177\u0080\7g\2\2\u0080\u0081\7"
			+ "p\2\2\u0081\u0082\7e\2\2\u0082\u0083\7g\2\2\u0083\u0084\7}\2\2\u0084\4"
			+ "\3\2\2\2\u0085\u0086\7Q\2\2\u0086\u0087\7t\2\2\u0087\u0088\7f\2\2\u0088"
			+ "\u0089\7g\2\2\u0089\u008a\7t\2\2\u008a\u008b\7g\2\2\u008b\u008c\7f\2\2"
			+ "\u008c\u008d\7U\2\2\u008d\u008e\7g\2\2\u008e\u008f\7v\2\2\u008f\u0090"
			+ "\7}\2\2\u0090\6\3\2\2\2\u0091\u0092\7U\2\2\u0092\u0093\7g\2\2\u0093\u0094"
			+ "\7s\2\2\u0094\u0095\7w\2\2\u0095\u0096\7g\2\2\u0096\u0097\7p\2\2\u0097"
			+ "\u0098\7e\2\2\u0098\u0099\7g\2\2\u0099\u009a\7*\2\2\u009a\b\3\2\2\2\u009b"
			+ "\u009c\7]\2\2\u009c\n\3\2\2\2\u009d\u009e\7q\2\2\u009e\u009f\7t\2\2\u009f"
			+ "\f\3\2\2\2\u00a0\u00a1\7>\2\2\u00a1\16\3\2\2\2\u00a2\u00a3\7h\2\2\u00a3"
			+ "\u00a4\7c\2\2\u00a4\u00a5\7n\2\2\u00a5\u00a6\7u\2\2\u00a6\u00a7\7g\2\2"
			+ "\u00a7\20\3\2\2\2\u00a8\u00a9\7u\2\2\u00a9\u00aa\7k\2\2\u00aa\u00ab\7"
			+ "d\2\2\u00ab\u00ac\7n\2\2\u00ac\u00ad\7k\2\2\u00ad\u00ae\7p\2\2\u00ae\u00af"
			+ "\7i\2\2\u00af\u00b0\7u\2\2\u00b0\u00b1\7*\2\2\u00b1\22\3\2\2\2\u00b2\u00b3"
			+ "\7>\2\2\u00b3\u00b4\7?\2\2\u00b4\24\3\2\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7"
			+ "\7e\2\2\u00b7\u00b8\7n\2\2\u00b8\u00b9\7K\2\2\u00b9\u00ba\7u\2\2\u00ba"
			+ "\u00bb\7M\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7f\2\2"
			+ "\u00be\u00bf\7Q\2\2\u00bf\u00c0\7h\2\2\u00c0\u00c1\7*\2\2\u00c1\26\3\2"
			+ "\2\2\u00c2\u00c3\7t\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7l\2\2\u00c5\u00c6"
			+ "\7g\2\2\u00c6\u00c7\7e\2\2\u00c7\u00c8\7v\2\2\u00c8\30\3\2\2\2\u00c9\u00ca"
			+ "\7\177\2\2\u00ca\32\3\2\2\2\u00cb\u00cc\7r\2\2\u00cc\u00cd\7t\2\2\u00cd"
			+ "\u00ce\7g\2\2\u00ce\u00cf\7e\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1\7f\2\2"
			+ "\u00d1\u00d2\7k\2\2\u00d2\u00d3\7p\2\2\u00d3\u00d4\7i\2\2\u00d4\u00d5"
			+ "\7U\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7d\2\2\u00d7\u00d8\7n\2\2\u00d8"
			+ "\u00d9\7k\2\2\u00d9\u00da\7p\2\2\u00da\u00db\7i\2\2\u00db\u00dc\7u\2\2"
			+ "\u00dc\u00dd\7*\2\2\u00dd\34\3\2\2\2\u00de\u00df\7c\2\2\u00df\u00e0\7"
			+ "p\2\2\u00e0\u00e1\7{\2\2\u00e1\36\3\2\2\2\u00e2\u00e3\7/\2\2\u00e3\u00e4"
			+ "\7@\2\2\u00e4 \3\2\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7u\2\2\u00e7\u00e8"
			+ "\7W\2\2\u00e8\u00e9\7p\2\2\u00e9\u00ea\7k\2\2\u00ea\u00eb\7s\2\2\u00eb"
			+ "\u00ec\7w\2\2\u00ec\u00ed\7g\2\2\u00ed\"\3\2\2\2\u00ee\u00ef\7+\2\2\u00ef"
			+ "$\3\2\2\2\u00f0\u00f1\7e\2\2\u00f1\u00f2\7q\2\2\u00f2\u00f3\7n\2\2\u00f3"
			+ "\u00f4\7n\2\2\u00f4\u00f5\7g\2\2\u00f5\u00f6\7e\2\2\u00f6\u00f7\7v\2\2"
			+ "\u00f7&\3\2\2\2\u00f8\u00f9\7<\2\2\u00f9\u00fa\7<\2\2\u00fa(\3\2\2\2\u00fb"
			+ "\u00fc\7k\2\2\u00fc\u00fd\7u\2\2\u00fd\u00fe\7*\2\2\u00fe*\3\2\2\2\u00ff"
			+ "\u0100\7?\2\2\u0100,\3\2\2\2\u0101\u0102\7U\2\2\u0102\u0103\7v\2\2\u0103"
			+ "\u0104\7t\2\2\u0104\u0105\7k\2\2\u0105\u0106\7p\2\2\u0106\u0107\7i\2\2"
			+ "\u0107.\3\2\2\2\u0108\u0109\7q\2\2\u0109\u010a\7e\2\2\u010a\u010b\7n\2"
			+ "\2\u010b\u010c\7C\2\2\u010c\u010d\7u\2\2\u010d\u010e\7V\2\2\u010e\u010f"
			+ "\7{\2\2\u010f\u0110\7r\2\2\u0110\u0111\7g\2\2\u0111\u0112\7*\2\2\u0112"
			+ "\60\3\2\2\2\u0113\u0114\7h\2\2\u0114\u0115\7q\2\2\u0115\u0116\7t\2\2\u0116"
			+ "\u0117\7C\2\2\u0117\u0118\7n\2\2\u0118\u0119\7n\2\2\u0119\62\3\2\2\2\u011a"
			+ "\u011b\7p\2\2\u011b\u011c\7w\2\2\u011c\u011d\7n\2\2\u011d\u011e\7n\2\2"
			+ "\u011e\64\3\2\2\2\u011f\u0120\7g\2\2\u0120\u0121\7C\2\2\u0121\u0122\7"
			+ "n\2\2\u0122\u0123\7n\2\2\u0123\u0124\7E\2\2\u0124\u0125\7q\2\2\u0125\u0126"
			+ "\7p\2\2\u0126\u0127\7v\2\2\u0127\u0128\7g\2\2\u0128\u0129\7p\2\2\u0129"
			+ "\u012a\7v\2\2\u012a\u012b\7u\2\2\u012b\u012c\7*\2\2\u012c\66\3\2\2\2\u012d"
			+ "\u012e\7~\2\2\u012e8\3\2\2\2\u012f\u0130\7_\2\2\u0130:\3\2\2\2\u0131\u0132"
			+ "\7q\2\2\u0132\u0133\7e\2\2\u0133\u0134\7n\2\2\u0134\u0135\7K\2\2\u0135"
			+ "\u0136\7u\2\2\u0136\u0137\7V\2\2\u0137\u0138\7{\2\2\u0138\u0139\7r\2\2"
			+ "\u0139\u013a\7g\2\2\u013a\u013b\7Q\2\2\u013b\u013c\7h\2\2\u013c\u013d"
			+ "\7*\2\2\u013d<\3\2\2\2\u013e\u013f\7g\2\2\u013f\u0140\7E\2\2\u0140\u0141"
			+ "\7q\2\2\u0141\u0142\7p\2\2\u0142\u0143\7v\2\2\u0143\u0144\7g\2\2\u0144"
			+ "\u0145\7p\2\2\u0145\u0146\7v\2\2\u0146\u0147\7u\2\2\u0147\u0148\7*\2\2"
			+ "\u0148>\3\2\2\2\u0149\u014a\7u\2\2\u014a\u014b\7g\2\2\u014b\u014c\7n\2"
			+ "\2\u014c\u014d\7g\2\2\u014d\u014e\7e\2\2\u014e\u014f\7v\2\2\u014f@\3\2"
			+ "\2\2\u0150\u0151\7.\2\2\u0151B\3\2\2\2\u0152\u0153\7/\2\2\u0153D\3\2\2"
			+ "\2\u0154\u0155\7<\2\2\u0155F\3\2\2\2\u0156\u0157\7*\2\2\u0157H\3\2\2\2"
			+ "\u0158\u0159\7p\2\2\u0159\u015a\7q\2\2\u015a\u015b\7v\2\2\u015bJ\3\2\2"
			+ "\2\u015c\u015d\7g\2\2\u015d\u015e\7E\2\2\u015e\u015f\7q\2\2\u015f\u0160"
			+ "\7p\2\2\u0160\u0161\7v\2\2\u0161\u0162\7c\2\2\u0162\u0163\7k\2\2\u0163"
			+ "\u0164\7p\2\2\u0164\u0165\7g\2\2\u0165\u0166\7t\2\2\u0166\u0167\7*\2\2"
			+ "\u0167L\3\2\2\2\u0168\u0169\7}\2\2\u0169N\3\2\2\2\u016a\u016b\7c\2\2\u016b"
			+ "\u016c\7p\2\2\u016c\u016d\7f\2\2\u016dP\3\2\2\2\u016e\u016f\7g\2\2\u016f"
			+ "\u0170\7K\2\2\u0170\u0171\7p\2\2\u0171\u0172\7x\2\2\u0172\u0173\7g\2\2"
			+ "\u0173\u0174\7t\2\2\u0174\u0175\7u\2\2\u0175\u0176\7g\2\2\u0176\u0177"
			+ "\7*\2\2\u0177R\3\2\2\2\u0178\u0179\7v\2\2\u0179\u017a\7t\2\2\u017a\u017b"
			+ "\7w\2\2\u017b\u017c\7g\2\2\u017cT\3\2\2\2\u017d\u017e\7\60\2\2\u017eV"
			+ "\3\2\2\2\u017f\u0180\7-\2\2\u0180X\3\2\2\2\u0181\u0182\7>\2\2\u0182\u0183"
			+ "\7@\2\2\u0183Z\3\2\2\2\u0184\u0185\7h\2\2\u0185\u0186\7k\2\2\u0186\u0187"
			+ "\7n\2\2\u0187\u0188\7v\2\2\u0188\u0189\7g\2\2\u0189\u018a\7t\2\2\u018a"
			+ "\u018b\7*\2\2\u018b\\\3\2\2\2\u018c\u018d\7D\2\2\u018d\u018e\7q\2\2\u018e"
			+ "\u018f\7q\2\2\u018f\u0190\7n\2\2\u0190\u0191\7g\2\2\u0191\u0192\7c\2\2"
			+ "\u0192\u0193\7p\2\2\u0193^\3\2\2\2\u0194\u0195\7K\2\2\u0195\u0196\7p\2"
			+ "\2\u0196\u0197\7v\2\2\u0197\u0198\7g\2\2\u0198\u0199\7i\2\2\u0199\u019a"
			+ "\7g\2\2\u019a\u019b\7t\2\2\u019b`\3\2\2\2\u019c\u019d\7g\2\2\u019d\u019e"
			+ "\7z\2\2\u019e\u019f\7k\2\2\u019f\u01a0\7u\2\2\u01a0\u01a1\7v\2\2\u01a1"
			+ "\u01a2\7u\2\2\u01a2b\3\2\2\2\u01a3\u01a4\7@\2\2\u01a4d\3\2\2\2\u01a5\u01a6"
			+ "\7T\2\2\u01a6\u01a7\7g\2\2\u01a7\u01a8\7c\2\2\u01a8\u01a9\7n\2\2\u01a9"
			+ "f\3\2\2\2\u01aa\u01ab\7c\2\2\u01ab\u01ac\7u\2\2\u01ac\u01ad\7*\2\2\u01ad"
			+ "h\3\2\2\2\u01ae\u01af\7Q\2\2\u01af\u01b0\7t\2\2\u01b0\u01b1\7f\2\2\u01b1"
			+ "\u01b2\7g\2\2\u01b2\u01b3\7t\2\2\u01b3\u01b4\7g\2\2\u01b4\u01b5\7f\2\2"
			+ "\u01b5\u01b6\7U\2\2\u01b6\u01b7\7g\2\2\u01b7\u01b8\7v\2\2\u01b8\u01b9"
			+ "\7*\2\2\u01b9j\3\2\2\2\u01ba\u01bb\7@\2\2\u01bb\u01bc\7?\2\2\u01bcl\3"
			+ "\2\2\2\u01bd\u01bf\t\2\2\2\u01be\u01bd\3\2\2\2\u01bf\u01c0\3\2\2\2\u01c0"
			+ "\u01be\3\2\2\2\u01c0\u01c1\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2\u01c3\b\67"
			+ "\2\2\u01c3n\3\2\2\2\u01c4\u01c5\t\3\2\2\u01c5p\3\2\2\2\u01c6\u01c8\t\4"
			+ "\2\2\u01c7\u01c6\3\2\2\2\u01c8\u01c9\3\2\2\2\u01c9\u01c7\3\2\2\2\u01c9"
			+ "\u01ca\3\2\2\2\u01car\3\2\2\2\u01cb\u01cd\t\4\2\2\u01cc\u01cb\3\2\2\2"
			+ "\u01cd\u01ce\3\2\2\2\u01ce\u01cc\3\2\2\2\u01ce\u01cf\3\2\2\2\u01cf\u01d0"
			+ "\3\2\2\2\u01d0\u01d2\7\60\2\2\u01d1\u01d3\t\4\2\2\u01d2\u01d1\3\2\2\2"
			+ "\u01d3\u01d4\3\2\2\2\u01d4\u01d2\3\2\2\2\u01d4\u01d5\3\2\2\2\u01d5t\3"
			+ "\2\2\2\u01d6\u01da\7)\2\2\u01d7\u01d9\13\2\2\2\u01d8\u01d7\3\2\2\2\u01d9"
			+ "\u01dc\3\2\2\2\u01da\u01db\3\2\2\2\u01da\u01d8\3\2\2\2\u01db\u01dd\3\2"
			+ "\2\2\u01dc\u01da\3\2\2\2\u01dd\u01de\7)\2\2\u01dev\3\2\2\2\u01df\u01e2"
			+ "\5y=\2\u01e0\u01e2\7a\2\2\u01e1\u01df\3\2\2\2\u01e1\u01e0\3\2\2\2\u01e2"
			+ "\u01e7\3\2\2\2\u01e3\u01e6\5y=\2\u01e4\u01e6\t\5\2\2\u01e5\u01e3\3\2\2"
			+ "\2\u01e5\u01e4\3\2\2\2\u01e6\u01e9\3\2\2\2\u01e7\u01e5\3\2\2\2\u01e7\u01e8"
			+ "\3\2\2\2\u01e8x\3\2\2\2\u01e9\u01e7\3\2\2\2\u01ea\u01eb\t\6\2\2\u01eb"
			+ "z\3\2\2\2\13\2\u01c0\u01c9\u01ce\u01d4\u01da\u01e1\u01e5\u01e7\3\b\2\2";

	public static final ATN _ATN = new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}
